#!/bin/busybox sh

BOOTLOGO="boot-logo"
export HOME=/mnt
export SDL_NOMOUSE=1
START="${HOME}/autoexec.sh"

BOOTDIR=/boot # we expect /dev/mmcblk0p1 has been mounted here read only, from inittab
LOGS=/dev/null
#LOGS=/mnt/log.txt
# can use /mnt/log.txt here, but note that this prevents clean shutdowns - so only use this for debugging
export LOGS # so that subshells can use this as well

# try to read what handheld we're on
if test -r "${BOOTDIR}/console.cfg"; then
    source "${BOOTDIR}/console.cfg"
fi
# sanity checks - we default to V90/Q90
if test -z "${CONSOLE_VARIANT}"; then
    CONSOLE_VARIANT="v90_q90"
fi
if test ! -d "${BOOTDIR}/variants/${CONSOLE_VARIANT}"; then
    CONSOLE_VARIANT="v90_q90"
fi
export CONSOLE_VARIANT

# check if it's first boot and turn on messages if yes
if test -r "${BOOTDIR}/firstboot"; then
    DEBUG_MSG="yes"
fi

if test "x${DEBUG_MSG}" == "xyes"; then
    echo -e "\e[0m"    # normal foreground colour
    export DEBUG_MSG   # set it globally for further programs
else
    echo -e "\e[30m"   # black foreground colour
fi

# load kernel modules
insmod "${BOOTDIR}/syscopyarea.ko" >> "${LOGS}" 2>&1
insmod "${BOOTDIR}/sysfillrect.ko" >> "${LOGS}" 2>&1
insmod "${BOOTDIR}/sysimgblt.ko" >> "${LOGS}" 2>&1

if test -r "${BOOTDIR}/variants/${CONSOLE_VARIANT}/modules.custom.sh"; then
    # if there is a custom module loading script, use that
    (cd "${BOOTDIR}/variants/${CONSOLE_VARIANT}" && sh modules.custom.sh ) >> "${LOGS}" 2>&1
else
    # just load the expected ones (screen driver) from here
    # do it directly and not rely on modprobe trying to find them
    #   automatically in rootfs/lib/modules/VERSION
    #   (also because with custom kernels the VERSION will be different
    insmod "${BOOTDIR}/r61520fb.ko"
fi

# check if it's first boot and defer to the firstboot script if yes
if test -r "${BOOTDIR}/firstboot"; then
    exec sh "${BOOTDIR}/firstboot"
fi

#Check if fat32 is flagged as "dirty", and if so unmount, repair, remount
if dmesg | grep "mmcblk0p4" > /dev/null;  then
echo -e "\e[31mUnclean shutdown detected.\e[0m"
echo -e "\e[32mChecking FAT32 partition...\e[0m"
umount /dev/mmcblk0p4
fsck.vfat -y /dev/mmcblk0p4 > /dev/null; 
mount /dev/mmcblk0p4 "${HOME}" -t vfat -o rw,sync,utf8
echo -e "\e[32mCheck complete.\e[0m"
fi

clear

echo "Boot!" >> "${LOGS}"
echo "Handheld type is ${CONSOLE_VARIANT}" >> "${LOGS}"

# run any custom commands ('daemon' expected to be run from there)
if test -r "${BOOTDIR}/variants/${CONSOLE_VARIANT}/normalboot.custom.sh" ; then
    (cd "${BOOTDIR}/variants/${CONSOLE_VARIANT}" && sh normalboot.custom.sh ) # don't redirect, want output on screen
else
    # at least run 'daemon'
    "${BOOTDIR}/variants/${CONSOLE_VARIANT}/daemon" >> "${LOGS}" 2>&1
fi

# run boot logo animation
if [ -e "${BOOTDIR}/variants/${CONSOLE_VARIANT}/${BOOTLOGO}" ]; then
    "${BOOTDIR}/variants/${CONSOLE_VARIANT}/${BOOTLOGO}" >> "${LOGS}" 2>&1
fi

# can't unmount boot because 'daemon' runs from it - but it's mounted read-only
#  so it's fine
## umount /dev/mmcblk0p1

if test "x${DEBUG_MSG}" == "xyes"; then
    echo "(Waiting 5 seconds before proceeding...)"
    sleep 5
    dmesg > /mnt/dmesg.txt
fi

sleep 1

while [ 1 ]
do
    if test -f "${START}"; then
        source "${START}"
    else

        cd "${HOME}"/gmenu2x;
        ./gmenu2x >> "${LOGS}" 2>&1;
    fi
    clear
done
